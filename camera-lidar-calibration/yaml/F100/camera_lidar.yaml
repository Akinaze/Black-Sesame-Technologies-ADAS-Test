%YAML:1.0
---
# DECLARE
## camera coordinate:
##   Z(forward along the optic axis)
##   X(right)
##   Y(down)
# Step 1: Check signature 
Signature: "Autoware"
# Step 2: Skip file header
SkipHeaderRows:
    csv: 1
    pcd: 11
# Step 3: Transform world(lidar) to right hand coordinate(same to camera)
## prior always, 1:=do nothing; -1:=reverse this axis
RHTransformMark:
    x: 1
    y: 1
    z: 1
## only when `RHTransformMark` is undefined
RHTransformMat: !!opencv-matrix
    rows: 3
    cols: 3
    dt: d
    data: [1, 0, 0,
           0, 1, 0,
           0, 0, 1]
# Step 4: Pick up lidar's data, nonnegative integer:=column; -1:=does't exist
PickLidarDataMark:
    x: 0
    y: 1
    z: 2
    d: -1
    i: 3
# Step 5(Optional): (For calibrate) Set initial posture
## unit: rotate angle(degree), shift distance(meter)
## how to: other(world) coordinate -> camera coordinate (rotate then shift)
InitialPosture:
    rx: -87.599
    ry: -1.312
    rz: -86.401
    sx: 0.159
    sy: 1.507
    sz: -2.126

# Raw Data: camera coordinate -> other(lidar) coordinate
CameraExtrinsicMat: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [ 6.2756643805834525e-02, 4.3246507384394367e-02,
       9.9709144177316000e-01, 2.0446656122163280e+00,
       -9.9776617698341219e-01, -2.0201741650605804e-02,
       6.3675314700346139e-02, 3.2446256586076133e-01,
       2.2896718676123595e-02, -9.9886016500475860e-01,
       4.1882108835787517e-02, 1.5906830537775518e+00, 0., 0., 0., 1. ]
CameraMat: !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: [ 1.1489085029237572e+03, 0., 9.4714321014216864e+02, 0.,
       1.1488538852905278e+03, 4.7387356698368308e+02, 0., 0., 1. ]
DistCoeff: !!opencv-matrix
   rows: 1
   cols: 5
   dt: d
   data: [ -3.4520153921582586e-01, 1.4640499152528277e-01,
       7.3555867691379450e-05, 4.2429848150391963e-05, 0. ]
ImageSize: [ 1920, 1080 ]
ReprojectionError: "Unavailable"